{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/Downloads/divide-master/project1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nineleaps/Downloads/divide-master/project1/src/Component/pages/Work/InlineForm.js\";\nimport React from \"react\";\nimport TextField from \"material-ui/TextField\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport CheckIcon from \"material-ui/svg-icons/navigation/check\";\nimport CancelIcon from \"material-ui/svg-icons/navigation/cancel\";\nimport { TableRow, TableRowColumn } from \"material-ui/Table\";\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.change = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(state => ({\n        values: _objectSpread({}, state.values, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.validate = () => {\n      let isError = false;\n      const errors = {\n        document_name: \"\",\n        document_status: \"\"\n      }; // const { username, email } = this.state.values;\n      // if (username.length < 5) {\n      //   isError = true;\n      //   errors.username = \"Username needs to be atleast 5 characters long\";\n      // }\n      // if (email.indexOf(\"@\") === -1) {\n      //   isError = true;\n      //   errors.email = \"Requires valid email\";\n      // }\n\n      this.setState({\n        errors\n      });\n      return isError;\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const err = this.validate();\n\n      if (!err) {\n        this.props.handleSave(this.props.i, this.state.values);\n      }\n    };\n\n    this.state = {\n      values: _objectSpread({}, props.x),\n      length: 0,\n      errors: {\n        document_name: \"\",\n        document_status: \"\"\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          header = _this$props.header,\n          x = _this$props.x,\n          i = _this$props.i;\n    return [header.map((y, k) => React.createElement(TableRowColumn, {\n      key: \"trc-\".concat(k),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: y.prop,\n      className: k === 1 ? 'disable' : '',\n      onChange: this.change,\n      value: k === 1 ? i : this.state.values[y.prop],\n      errorText: this.state.errors[y.prop],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(TableRowColumn, {\n      key: \"icon-row-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(CheckIcon, {\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(CancelIcon, {\n      onClick: this.props.stopEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))];\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/Downloads/divide-master/project1/src/Component/pages/Work/InlineForm.js"],"names":["React","TextField","RaisedButton","CheckIcon","CancelIcon","TableRow","TableRowColumn","Form","Component","constructor","props","change","e","target","name","value","setState","state","values","validate","isError","errors","document_name","document_status","onSubmit","preventDefault","err","handleSave","i","x","length","render","header","map","y","k","prop","stopEditing"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextField from \"material-ui/TextField\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport CheckIcon from \"material-ui/svg-icons/navigation/check\";\nimport CancelIcon from \"material-ui/svg-icons/navigation/cancel\";\nimport { TableRow, TableRowColumn } from \"material-ui/Table\";\n\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: {\n        ...props.x\n      },\n      length: 0,\n      errors: {\n        document_name: \"\",\n        document_status: \"\",\n        \n      }\n    };\n  }\n\n  change = e => {\n    const { name, value } = e.target;\n    this.setState(state => ({\n      values: {\n        ...state.values,\n        [name]: value\n      }\n    }));\n  };\n\n  validate = () => {\n    let isError = false;\n    const errors = {\n       document_name: \"\",\n       document_status: \"\",\n     \n    };\n\n    // const { username, email } = this.state.values;\n\n    // if (username.length < 5) {\n    //   isError = true;\n    //   errors.username = \"Username needs to be atleast 5 characters long\";\n    // }\n\n    // if (email.indexOf(\"@\") === -1) {\n    //   isError = true;\n    //   errors.email = \"Requires valid email\";\n    // }\n\n    this.setState({\n      errors\n    });\n\n    return isError;\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const err = this.validate();\n    if (!err) {\n      this.props.handleSave(this.props.i, this.state.values);\n    }\n  };\n\n  render() {\n    const { header, x, i } = this.props;\n    return [\n      header.map((y, k) => (\n        <TableRowColumn key={`trc-${k}`}>\n          <TextField\n            name={y.prop}\n            className={k === 1 ? 'disable' : ''}\n            onChange={this.change}\n            value={k === 1 ? i : this.state.values[y.prop]}\n            errorText={this.state.errors[y.prop]}\n          />\n        </TableRowColumn>\n      )),\n      <TableRowColumn key=\"icon-row-column\">\n        <CheckIcon onClick={this.onSubmit} />\n        <CancelIcon onClick={this.props.stopEditing} />\n      </TableRowColumn>\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}